AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template
Parameters:
  ApplicationName:
    Type: String
    Default: qrcode
    Description: Enter The name of thr application.
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - preprod
      - prod
    Description: EnvironmentName.
  SourceStageName:
    Type: String
    Default: gitscm
  SourceActionName:
    Type: String
    Default: Clonerepo
  CodePiplineRoleDescription:
    Type: String
    Default: "The code pipeline assume role"
  GitHubSource:
    Type: String
    Default: "https://github.com/santhu3064/QRCODE.git"
  CodeBuildEnvironmentPrivilegedMode:
    Type: String
    Default: true
  CodeBuildEnvironmentImage:
    Type: String
    Default: aws/codebuild/standard:4.0
  CodeBuildEnvironmentType:
    Type: String
    Default: 'LINUX_CONTAINER'
    AllowedValues:
      - 'ARM_CONTAINER'
      - 'LINUX_CONTAINER'
      - 'LINUX_GPU_CONTAINER'
      - 'WINDOWS_CONTAINER'
      - 'WINDOWS_SERVER_2019_CONTAINER'
  CodeBuildEnvironmentComputeType:
    Type: String
    Default: 'BUILD_GENERAL1_SMALL'
    AllowedValues:
      - 'BUILD_GENERAL1_SMALL'
      - 'BUILD_GENERAL1_MEDIUM'
      - 'BUILD_GENERAL1_LARGE'
  ECRStackName:
    Type: String
    Default: 'arcade'
  BuildStageName:
    Type: String
    Default: Build
  BuildActionName:
    Type: String
    Default: RunCodeBuild
  SourceActionName:
    Type: String
    Default: CloneSource
  SourceStageName:
    Type: String
    Default: GitScm
  CodeBuildStackname:
    Type: String
    Default: qrdevcodbuild-stack
  DeployActionName:
    Type: String
    Default: DeplotoEcs
  DeployStageName:
    Type: String
    Default: Deploy
  CodepipelineS3stackname:
    Type: String
    Default: codepiplines3bucket
  GitHubConnectionArn:
    Type: String
    Default: 'arn:aws:codestar-connections:eu-west-2:307533935679:connection/d6dbceb0-978d-45a3-a951-3174793a4998'
  EcsStackName:
    Type: String
    Default: ecscluster-dev
  AppSpecTemplateArtifact:
    Type: String
    Default: BuildArtifact
    AllowedValues:
      - SourceArtifact
      - BuildArtifact
  TaskDefinitionTemplateArtifact:
    Type: String
    Default: BuildArtifact
    AllowedValues:
      - SourceArtifact
      - BuildArtifact
  CodeDeployApplicationName:
    Type: String
    Default: phones
  CodeDeployDeploymentGroupName:
    Type: String
    Default: pheonix
  TaskDefinitionTemplatePath:
    Type: String
    Default: taskdef.json
  AppSpecTemplatePath:
    Type: String
    Default: appspec.yaml
Resources:
  CodepipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
      Path: /
      Description: !Ref CodePiplineRoleDescription
      RoleName: !Join
        - '-'
        - - codepipeline
          - !Ref ApplicationName
          - !Ref Environment
          - 'role'
      Tags:
        - Key: Environment
          Value: !Ref Environment
  CodepipelineTriggerPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join
          - '-'
          - - 'codepipeline'
            - !Ref ApplicationName
            - !Ref Environment
      Roles:
        - !Ref CodepipelineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              -  'codebuild:BatchGetBuilds'
              -  'codebuild:StartBuild'
              -  'codebuild:BatchGetBuildBatches'
              -  'codebuild:StartBuildBatch'
            Resource:
              Fn::ImportValue:
                !Sub "${CodeBuildStackname}-codebuild-arn"
          - Effect: Allow
            Action:
              - 'codedeploy:CreateDeployment'
              - 'codedeploy:GetApplicationRevision'
              - 'codedeploy:GetDeployment'
              - 'codedeploy:GetDeploymentConfig'
              - 'codedeploy:RegisterApplicationRevision'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'codebuild:BatchGetBuilds'
              - 'codebuild:StartBuild'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:ListBucketMultipartUploads'
              - 's3:DeleteObjectVersion'
              - 's3:ListBucketVersions'
              - 's3:ListBucket'
              - 's3:PutObjectLegalHold'
              - 's3:GetBucketAcl'
              - 's3:ListMultipartUploadParts'
              - 's3:PutObject'
              - 's3:GetObjectAcl'
              - 's3:GetObject'
              - 's3:PutObjectRetention'
              - 's3:GetBucketCORS'
              - 's3:GetObjectTagging'
              - 's3:DeleteObject'
              - 's3:PutBucketVersioning'
              - 's3:GetObjectVersion'
            Resource:
              Fn::Join:
                - "/"
                - - Fn::ImportValue: !Sub "${CodepipelineS3stackname}-bucket-arn"
                  - "*"
          - Effect: Allow
            Action:
              - 'codestar-connections:UseConnection'
            Resource: '*'
  CodePipelineTest:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join
        - '-'
        - - !Ref ApplicationName
          - !Ref Environment
      RestartExecutionOnUpdate: No
      RoleArn: 'arn:aws:iam::307533935679:role/service-role/AWSCodePipelineServiceRole-eu-west-2-test'
      ArtifactStore:
        Location:
          Fn::ImportValue:
            !Sub "${CodepipelineS3stackname}-bucket-name"
        Type: S3
      Stages:
        - Name: !Ref SourceStageName
          Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: "santhu3064/QRCODE"
                BranchName: "master"
              Name: !Ref SourceActionName
              Region: !Ref "AWS::Region"
              RunOrder: 1
        - Name: !Ref BuildStageName
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                PrimarySource: SourceArtifact
                ProjectName:
                  Fn::ImportValue:
                    !Sub "${CodeBuildStackname}-codebuild-name"
              Name: !Ref BuildActionName
              Region: !Ref "AWS::Region"
              RunOrder: 2
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: !Ref DeployStageName
          Actions:
            - Name: !Ref DeployActionName
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeployToECS
                Version: '1'
              RunOrder: 3
              Configuration:
                AppSpecTemplateArtifact: !Ref AppSpecTemplateArtifact
                ApplicationName: !Ref CodeDeployApplicationName
                DeploymentGroupName: !Ref CodeDeployDeploymentGroupName
                TaskDefinitionTemplatePath: !Ref TaskDefinitionTemplatePath
                AppSpecTemplatePath: !Ref AppSpecTemplatePath
                TaskDefinitionTemplateArtifact: !Ref TaskDefinitionTemplateArtifact
                Image1ArtifactName: BuildArtifact
                Image1ContainerName: IMAGE1_NAME
              InputArtifacts:
                - Name: BuildArtifact
              Region: !Ref "AWS::Region"
              Namespace: DeployVariables
