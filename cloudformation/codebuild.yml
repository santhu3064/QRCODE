AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template
Parameters:
  ApplicationName:
    Type: String
    Default: qrcode
    Description: Enter The name of thr application.
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - preprod
      - prod
    Description: EnvironmentName.
  RepositoryName:
    Type: String
    Default: qrcodecft
  EcrCodeBuildPolicyName:
    Type: String
    Default: ecr
  CodeBuildRoleDescription:
    Type: String
    Default: "The code build assume role"
  GitHubSource:
    Type: String
    Default: "https://github.com/santhu3064/QRCODE.git"
  CodeBuildEnvironmentPrivilegedMode:
    Type: String
    Default: true
  CodeBuildEnvironmentImage:
    Type: String
    Default: aws/codebuild/standard:4.0
  CodeBuildEnvironmentType:
    Type: String
    Default: 'LINUX_CONTAINER'
    AllowedValues:
      - 'ARM_CONTAINER'
      - 'LINUX_CONTAINER'
      - 'LINUX_GPU_CONTAINER'
      - 'WINDOWS_CONTAINER'
      - 'WINDOWS_SERVER_2019_CONTAINER'
  CodeBuildEnvironmentComputeType:
    Type: String
    Default: 'BUILD_GENERAL1_SMALL'
    AllowedValues:
      - 'BUILD_GENERAL1_SMALL'
      - 'BUILD_GENERAL1_MEDIUM'
      - 'BUILD_GENERAL1_LARGE'
  ECRStackName:
    Type: String
    Default: 'dev-qr-ecr'
  CodepipelineS3stackname:
    Type: String
    Default: codepiplines3bucket
Resources:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      Description: !Ref CodeBuildRoleDescription
      RoleName: !Join
        - '-'
        - - codebuild
          - !Ref Environment
          - 'role'
      Tags:
        - Key: Environment
          Value: !Ref Environment
  EcrCodeBuildPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join
          - '-'
          - - 'ecr'
            - !Ref ApplicationName
            - !Ref Environment
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              -  'ecr:PutImageTagMutability'
              -  'ecr:StartImageScan'
              -  'ecr:ListTagsForResource'
              -  'ecr:UploadLayerPart'
              -  'ecr:BatchDeleteImage'
              -  'ecr:ListImages'
              -  'ecr:DeleteRepository'
              -  'ecr:GetAuthorizationToken'
              -  'ecr:CompleteLayerUpload'
              -  'ecr:TagResource'
              -  'ecr:DescribeRepositories'
              -  'ecr:DeleteRepositoryPolicy'
              -  'ecr:BatchCheckLayerAvailability'
              -  'ecr:ReplicateImage'
              -  'ecr:GetLifecyclePolicy'
              -  'ecr:PutLifecyclePolicy'
              -  'ecr:DescribeImageScanFindings'
              -  'ecr:GetLifecyclePolicyPreview'
              -  'ecr:CreateRepository'
              -  'ecr:PutImageScanningConfiguration'
              -  'ecr:GetDownloadUrlForLayer'
              -  'ecr:DeleteLifecyclePolicy'
              -  'ecr:PutImage'
              -  'ecr:UntagResource'
              -  'ecr:BatchGetImage'
              -  'ecr:DescribeImages'
              -  'ecr:StartLifecyclePolicyPreview'
              -  'ecr:InitiateLayerUpload'
              -  'ecr:GetRepositoryPolicy'
            Resource: "*"
    DependsOn: CodeBuildRole
  LogsCodeBuildPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join
          - '-'
          - - 'logs'
            - !Ref ApplicationName
            - !Ref Environment
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
    DependsOn: CodeBuildRole
  CodeBuildCodePipelineS3Policy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Join
          - '-'
          - - 'codebuild'
            - 'codepipeline'
            - 's3bucket'
            - !Ref ApplicationName
            - !Ref Environment
            - policy
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:ListBucketMultipartUploads
              - s3:DeleteObjectVersion
              - s3:ListBucketVersions
              - s3:ListBucket
              - s3:PutObjectLegalHold
              - s3:GetBucketAcl
              - s3:ListMultipartUploadParts
              - s3:PutObject
              - s3:GetObjectAcl
              - s3:GetObject
              - s3:PutObjectRetention
              - s3:GetBucketCORS
              - s3:GetObjectTagging
              - s3:DeleteObject
              - s3:PutBucketVersioning
              - s3:GetObjectVersion
            Resource:
              Fn::ImportValue:
                !Sub "${CodepipelineS3stackname}-bucket-arn"
    DependsOn: CodeBuildRole
  QrCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
          PrivilegedMode: !Ref CodeBuildEnvironmentPrivilegedMode
          Image: !Ref CodeBuildEnvironmentImage
          Type: !Ref CodeBuildEnvironmentType
          ComputeType: !Ref CodeBuildEnvironmentComputeType
          EnvironmentVariables:
            - Name: ECRREPOSITORY
              Type: PLAINTEXT
              Value: !Join
                - "."
                -
                  - !Ref "AWS::AccountId"
                  - "dkr"
                  - "ecr"
                  - !Ref "AWS::Region"
                  - "amazonaws"
                  - "com"
            - Name: REPOSITORYNAME
              Type: PLAINTEXT
              Value:
                Fn::ImportValue:
                  !Sub "${ECRStackName}-dev-qr"
      Name: !Sub "${Environment}-${ApplicationName}"
      ServiceRole: !Ref CodeBuildRole
      Source:
        Auth:
          Type: OAUTH
        Location: !Ref GitHubSource
        Type: GITHUB
Outputs:
  CodeBuildArn:
    Description: The Arn of code build for qrcode
    Value: !GetAtt QrCodeBuild.Arn
    Export:
      Name: !Sub "${AWS::StackName}-codebuild-arn"
  CodeBuildName:
    Description: The name of code build for qrcode
    Value: !Ref QrCodeBuild
    Export:
      Name: !Sub "${AWS::StackName}-codebuild-name"
